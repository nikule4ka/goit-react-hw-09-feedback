{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","Statistics","good","neutral","bad","totalFeedback","positiveFeedback","className","s","item","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","btn","name","type","onClick","button","toUpperCase","slice","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","e","currentTarget","prevState","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,kC,+ICgBZC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCwCQC,EA3CI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEA,OACE,mCACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,+BACE,yCACA,+BAAOP,OAET,+BACE,4CACA,+BAAOC,OAET,+BACE,wCACA,+BAAOC,OAET,+BACE,0CACA,+BAAOC,OAET,+BACE,sDACA,iCAAOC,EAAP,gB,gBCHKI,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,mCACGE,EAAQG,KAAI,SAAAC,GAAG,OACd,wBAEEC,KAAMD,EACNE,KAAK,SACLC,QAASR,EACTL,UAAWC,IAAEa,OALf,SAOGJ,EAAI,GAAGK,cAAgBL,EAAIM,MAAM,IAN7BN,SCFAO,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCI3B,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOvB,EAAP,KAAY0B,EAAZ,KAqBMC,EAAqB,WACzB,OAAO7B,EAAOC,EAAUC,GAOpBC,EAAgB0B,IAChBzB,EAJGJ,EAAO8B,KAAKC,MAAc,IAAP/B,EAAc6B,KAAwB,EAMlE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEY,QAAS,CAAET,OAAME,MAAKD,WACtBS,gBAnCgB,SAAAsB,GAGtB,OAFiBA,EAAEC,cAAXjB,MAGN,IAAK,OAEH,YADAU,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KAEnC,IAAK,UAEH,YADAP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KAEtC,IAAK,MAEH,YADAN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAGlC,QACE,OAAOC,MAAM,8BAwBf,cAAC,EAAD,CAAStC,MAAM,YAAf,SACqB,IAAlBM,EACC,cAAC,EAAD,CAAcoB,QAAQ,sBAEtB,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeA,EACfC,iBAAkBA,SCvD9BgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f42a26d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedback,\n}) => {\n  return (\n    <>\n      <ul className={s.item}>\n        <li>\n          <span>Good:</span>\n          <span>{good}</span>\n        </li>\n        <li>\n          <span>Neutral:</span>\n          <span>{neutral}</span>\n        </li>\n        <li>\n          <span>Bad:</span>\n          <span>{bad}</span>\n        </li>\n        <li>\n          <span>Total:</span>\n          <span>{totalFeedback}</span>\n        </li>\n        <li>\n          <span>Positive feedback:</span>\n          <span>{positiveFeedback}%</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const buttons = Object.keys(options);\n\n  return (\n    <>\n      {buttons.map(btn => (\n        <button\n          key={btn}\n          name={btn}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n          className={s.button}\n        >\n          {btn[0].toUpperCase() + btn.slice(1)}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = e => {\n    const { name } = e.currentTarget;\n\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        return;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        return;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        return;\n\n      default:\n        return alert(`Hey, something wrong`);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return good ? Math.round((good * 100) / countTotalFeedback()) : 0;\n  };\n\n  const totalFeedback = countTotalFeedback();\n  const positiveFeedback = countPositiveFeedbackPercentage();\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, bad, neutral }}\n          onLeaveFeedback={handleIncrement}\n        />\n      </Section>\n\n      <Section title=\"Statistic\">\n        {totalFeedback === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            totalFeedback={totalFeedback}\n            positiveFeedback={positiveFeedback}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}